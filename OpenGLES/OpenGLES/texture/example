
// 6.开始绘制
- (void)renderLayer{
    //
    glClearColor(0.3, 0.3, 0.3, 1.0);
    glClear(GL_COLOR_BUFFER_BIT);
    
    // 2.设置视口
    CGFloat scale = [[UIScreen mainScreen] scale];
    glViewport(self.frame.origin.x*scale, self.frame.origin.y*scale, self.frame.size.width*scale, self.frame.size.height*scale);
    
    // 3.读取顶点、片元着色器
    NSString *vertFile = [[NSBundle mainBundle] pathForResource:@"shaderv" ofType:@"vsh"];
    
    NSString *fragFile = [[NSBundle mainBundle] pathForResource:@"shaderf" ofType:@"fsh"];
    
    // 4.加载shader
    self.myProgram = [self loadShaders:vertFile withFrag:fragFile];
    
    // 5.链接program
    glLinkProgram(self.myProgram);
    
    GLint linkStatus;
    glGetProgramiv(self.myProgram, GL_LINK_STATUS, &linkStatus);
    if (linkStatus == GL_FALSE) {
        GLchar message[512];
        // 拿日志信息
        glGetProgramInfoLog(self.myProgram, sizeof(message), 0, &message[0]);
        NSString *msg = [NSString stringWithUTF8String:message];
        NSLog(@"program link error: %@", msg);
        return;
    }
    NSLog(@"Program Link Success!");

    // 6.使用program
    glUseProgram(self.myProgram);
    
    // 7.设置顶点/纹理坐标
    // 原始
    GLfloat attrArr[] = {
        0.5, -0.5, -1,   1.0,  0.0,
       -0.5,  0.5, -1,   0.0,  1.0,
       -0.5, -0.5, -1,   0.0,  0.0,

        0.5,  0.5, -1,   1.0,  1.0,
       -0.5,  0.5, -1,   0.0,  1.0,
        0.5, -0.5, -1,   1.0,  0.0,
    };
    // 翻转策略4
//    GLfloat attrArr[] = {
//        0.5, -0.5, -1,   1.0,  1.0,
//       -0.5,  0.5, -1,   0.0,  0.0,
//       -0.5, -0.5, -1,   0.0,  1.0,
//
//        0.5,  0.5, -1,   1.0,  0.0,
//       -0.5,  0.5, -1,   0.0,  0.0,
//        0.5, -0.5, -1,   1.0,  1.0,
//    };
    
    // 8.顶点缓存区
    GLuint attrBuffer;
    glGenBuffers(1, &attrBuffer);
    glBindBuffer(GL_ARRAY_BUFFER, attrBuffer);
    glBufferData(GL_ARRAY_BUFFER, sizeof(attrArr), attrArr, GL_STATIC_DRAW);
    
    // 用自定义的顶点着色器
    GLuint position = glGetAttribLocation(self.myProgram, "position");
    glEnableVertexAttribArray(position);
    
    // 设置读取方式
    glVertexAttribPointer(position, 3, GL_FLOAT, GL_FALSE, sizeof(GLfloat)*5, NULL);
    
    GLuint textCoor = glGetAttribLocation(self.myProgram, "textCoordinate");
    glEnableVertexAttribArray(textCoor);
    glVertexAttribPointer(textCoor, 2, GL_FLOAT, GL_FALSE, sizeof(GLfloat)*5, (GLfloat *)NULL+3);
    
    // 加载纹理
    [self setupTexture:@"kunkun"];
    
    // 设置纹理采样器 sampler2D
    glUniform1i(glGetUniformLocation(self.myProgram, "colorMap"), 0);
    
    // 疑问，为什么在这里进行翻转，因为要先编译shader文件
    [self rotateTextureImage];
    
    // 绘图
    glDrawArrays(GL_TRIANGLES, 0, 6);
    
    // 从渲染缓存区显示到屏膜上
    [self.myContext presentRenderbuffer:GL_RENDERBUFFER];
}
